#
# Autogenerated by Thrift Compiler (0.9.3)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'

module OrderStatus
  PENDING = 0
  COOKING = 1
  QUALITY_CONTROL = 2
  DELIVERING = 3
  ON_DESTINATION = 4
  VALUE_MAP = {0 => "PENDING", 1 => "COOKING", 2 => "QUALITY_CONTROL", 3 => "DELIVERING", 4 => "ON_DESTINATION"}
  VALID_VALUES = Set.new([PENDING, COOKING, QUALITY_CONTROL, DELIVERING, ON_DESTINATION]).freeze
end

class Order
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ID = 1
  NAME = 2
  DELIVERYADDRESS = 4
  PHONENUMBER = 5
  PIZZAID = 6
  STATUS = 7

  FIELDS = {
    ID => {:type => ::Thrift::Types::I32, :name => 'id'},
    NAME => {:type => ::Thrift::Types::STRING, :name => 'name'},
    DELIVERYADDRESS => {:type => ::Thrift::Types::STRING, :name => 'deliveryAddress'},
    PHONENUMBER => {:type => ::Thrift::Types::STRING, :name => 'phoneNumber'},
    PIZZAID => {:type => ::Thrift::Types::I32, :name => 'pizzaId'},
    STATUS => {:type => ::Thrift::Types::I32, :name => 'status', :enum_class => ::OrderStatus}
  }

  def struct_fields; FIELDS; end

  def validate
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field id is unset!') unless @id
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field name is unset!') unless @name
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field deliveryAddress is unset!') unless @deliveryAddress
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field phoneNumber is unset!') unless @phoneNumber
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field pizzaId is unset!') unless @pizzaId
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field status is unset!') unless @status
    unless @status.nil? || ::OrderStatus::VALID_VALUES.include?(@status)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field status!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class OrderRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  NAME = 1
  DELIVERYADDRESS = 2
  PHONENUMBER = 3
  PIZZAID = 4

  FIELDS = {
    NAME => {:type => ::Thrift::Types::STRING, :name => 'name'},
    DELIVERYADDRESS => {:type => ::Thrift::Types::STRING, :name => 'deliveryAddress'},
    PHONENUMBER => {:type => ::Thrift::Types::STRING, :name => 'phoneNumber'},
    PIZZAID => {:type => ::Thrift::Types::I32, :name => 'pizzaId'}
  }

  def struct_fields; FIELDS; end

  def validate
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field name is unset!') unless @name
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field deliveryAddress is unset!') unless @deliveryAddress
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field phoneNumber is unset!') unless @phoneNumber
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field pizzaId is unset!') unless @pizzaId
  end

  ::Thrift::Struct.generate_accessors self
end

class Pizza
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ID = 1
  IMAGEURL = 2
  PRODUCTS = 3

  FIELDS = {
    ID => {:type => ::Thrift::Types::I32, :name => 'id'},
    IMAGEURL => {:type => ::Thrift::Types::STRING, :name => 'imageUrl'},
    PRODUCTS => {:type => ::Thrift::Types::LIST, :name => 'products', :element => {:type => ::Thrift::Types::STRING}}
  }

  def struct_fields; FIELDS; end

  def validate
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field id is unset!') unless @id
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field imageUrl is unset!') unless @imageUrl
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field products is unset!') unless @products
  end

  ::Thrift::Struct.generate_accessors self
end

